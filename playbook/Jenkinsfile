pipeline {
    agent any

    options {
        disableConcurrentBuilds()
        parallelsAlwaysFailFast()
        timestamps()
        withCredentials([
            [
                $class: 'AmazonWebServicesCredentialsBinding',
                credentialsId: 'f5e83b53-c9de-4429-b15d-2c4afda214cd',
                accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
            ]
        ])
    }
    
    stages {
        stage('Ansible-Playbook Execution') {
            steps {
                script {
                    try {
                        // Copia los archivos de inventario y playbooks de aws-ansible a la instancia EC2
                        sshagent(credentials: ['Your_SSH_Credentials']) {
                            sh "echo 'Copying files to remote server'"
                            sh "scp -o StrictHostKeyChecking=no -r inventory playbook ec2-user@ec2-34-219-53-90.us-west-2.compute.amazonaws.com:/tmp/"
                            sh "echo 'Files copied successfully'"
                        }
                        
                        // Ejecuta el playbook de Ansible en la instancia EC2
                        sshagent(credentials: ['Your_SSH_Credentials']) {
                            sh "ssh -o StrictHostKeyChecking=no ec2-user@ec2-34-219-53-90.us-west-2.compute.amazonaws.com 'cd /tmp/playbook && ansible-playbook -i /tmp/inventory/inventory.yml nginx_install.yml'"
                        }
                    } catch (Exception e) {
                        currentBuild.result = 'FAILURE'
                        error("Error during Ansible playbook execution: ${e.message}")
                    }
                }
            }
        }
    }
}
